====================
Type='ASSIGN_FIELD_NULLABLE', message='assigning @Nullable expression to @NonNull field'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/environment/tilemap/xml/CustomProperty.java:113
    this.value = ColorHelper.encode(Objects.requireNonNull(value));
Log:
11:39:53.335 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
==============================
11:39:53.335 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.COUNT = 1
11:39:53.335 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.PROMPTS SIZE = 1
11:39:53.335 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
Both set to 0 and cleared 0
11:39:53.335 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
27 : TOP LEVEL CALL TO FIX ERROR: Type='ASSIGN_FIELD_NULLABLE', message='assigning @Nullable expression to @NonNull field'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/environment/tilemap/xml/CustomProperty.java:113
    this.value = ColorHelper.encode(Objects.requireNonNull(value));
11:39:54.913 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "ASSIGN_FIELD_NULLABLE" and the full error message is: "assigning @Nullable expression to @NonNull field".
The line with the error is: "    this.value = ColorHelper.encode(Objects.requireNonNull(value));".

The error is within "the method: setValue(java.awt.Color)" and the code surrounding the error is:
```java
  @Override
  public void setValue(long value) {
    this.value = Long.toString(value);
    this.location = null;
  }

  @Override
  public void setValue(double value) {
    this.value = Double.toString(value);
    this.location = null;
  }

  @Override
  public void setValue(boolean value) {
    this.value = Boolean.toString(value);
    this.location = null;
  }

  @Override
  public void setValue(Color value) {
    this.value = ColorHelper.encode(Objects.requireNonNull(value));
    this.location = null;
  }

  @Override
  public String getAsString() {
    return this.value;
  }

  @Override
  public char getAsChar() {
    return this.value.charAt(
        0); // TODO Is this enough? Should it check if it's the right length and throw an exception
    // if it's not?
  }

  @Override
  public boolean getAsBool() {
    return Boolean.parseBoolean(this.value);
  }
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "setValue(java.awt.Color)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

11:39:54.913 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Retrieving response from cache
11:39:54.913 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.tryCreate
Trying to create Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  @Override
  public void setValue(Color value) {
    this.value = ColorHelper.encode(value);
    this.location = null;
  }
  ```
    ]]>
  </code>
</response>
```
11:39:54.914 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  @Override
  public void setValue(Color value) {
    this.value = ColorHelper.encode(value);
    this.location = null;
  }
  ```
    ]]>
  </code>
</response>
```
11:39:54.915 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Response created:
@Override
  public void setValue(Color value) {
    this.value = ColorHelper.encode(value);
    this.location = null;
  }
