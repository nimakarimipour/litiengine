====================
Type='DEREFERENCE_NULLABLE', message='dereferenced expression this.actions.get(actionName) is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/entities/Entity.java:311
    this.actions.get(actionName).perform();
Log:
---NullAway.lambda$resolveRemainingErrors$17---
==============================
---NullAway.lambda$resolveRemainingErrors$17---
TOP LEVEL CALL TO FIX ERROR: Type='DEREFERENCE_NULLABLE', message='dereferenced expression this.actions.get(actionName) is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/entities/Entity.java:311
    this.actions.get(actionName).perform();
---ChatGPT.ask---
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "DEREFERENCE_NULLABLE" and the full error message is: "dereferenced expression this.actions.get(actionName) is @Nullable".
The line with the error is: "    this.actions.get(actionName).perform();".

The error is within "the method: perform(java.lang.String)" and the code surrounding the error is:
```java

  @Override
  public EntityActionMap actions() {
    return this.actions;
  }

  @Override
  public void perform(String actionName) {
    if (actionName == null || actionName.isEmpty()) {
      return;
    }

    if (!this.actions.exists(actionName)) {
      log.log(
          Level.INFO,
          "Entity \"{0}\" could not perform the action \"{1}\". \nMaybe you need to register the action or provide an appropriate Action annotation on the method you want to call.",
          new Object[] {this, actionName});
      return;
    }

    this.actions.get(actionName).perform();
  }

  @Nullable
  @Override
  public EntityAction register(String name, Runnable action) {
    return this.actions.register(name, action);
  }

  @Nullable
  @Override
  public String sendMessage(final Object sender, @Nullable final String message) {
    EntityMessageEvent event = this.fireMessageReceived(sender, ANY_MESSAGE, message, null);
    this.fireMessageReceived(sender, message, message, event);

    return null;
  }

  @Override
  public void setHeight(final double height) {
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "perform(java.lang.String)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

---ChatGPT.sendRequestToOpenAI---
Sending request to OpenAI...
---ChatGPT.sendRequestToOpenAI---
Response received from OpenAI.
---Response.<init>---
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  @Override
  public void perform(String actionName) {
    if (actionName == null || actionName.isEmpty()) {
      return;
    }

    if (!this.actions.exists(actionName)) {
      log.log(
          Level.INFO,
          "Entity \"{0}\" could not perform the action \"{1}\". \nMaybe you need to register the action or provide an appropriate Action annotation on the method you want to call.",
          new Object[] {this, actionName});
      return;
    }

    EntityAction action = this.actions.get(actionName);
    if (action != null) {
      action.perform();
    }
  }
  ```
  ]]>
  </code>
</response>
```
---Response.<init>---
Response created:
@Override
  public void perform(String actionName) {
    if (actionName == null || actionName.isEmpty()) {
      return;
    }

    if (!this.actions.exists(actionName)) {
      log.log(
          Level.INFO,
          "Entity \"{0}\" could not perform the action \"{1}\". \nMaybe you need to register the action or provide an appropriate Action annotation on the method you want to call.",
          new Object[] {this, actionName});
      return;
    }

    EntityAction action = this.actions.get(actionName);
    if (action != null) {
      action.perform();
    }
  }
