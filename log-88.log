====================
Type='PASS_NULLABLE', message='passing @Nullable parameter 'focus' where @NonNull is required'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/graphics/Camera.java:139
    this.focus = this.clampToMap(focus);
Log:
12:04:15.224 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
==============================
12:04:15.224 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.COUNT = 2
12:04:15.224 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.PROMPTS SIZE = 2
12:04:15.224 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
Both set to 0 and cleared 0
12:04:15.224 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
88 : TOP LEVEL CALL TO FIX ERROR: Type='PASS_NULLABLE', message='passing @Nullable parameter 'focus' where @NonNull is required'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/graphics/Camera.java:139
    this.focus = this.clampToMap(focus);
12:04:16.732 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.AdvancedNullAwayCodeFix.fix
Fixing error: Type='PASS_NULLABLE', message='passing @Nullable parameter 'focus' where @NonNull is required'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/graphics/Camera.java:139
    this.focus = this.clampToMap(focus);
12:04:16.732 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.AdvancedNullAwayCodeFix.resolveRemainingErrors
Resolving remaining cast to nonnull
12:04:16.735 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Asking ChatGPT:
in the method below, the expression focus is not nullable at the point it is used.

```java
@Override
  public void setFocus(@Nullable final Point2D focus) {
    this.focus = this.clampToMap(focus);

    // dunno why but without the factor of 0.01 sometimes everything starts to
    // get wavy while rendering ...
    // it seems to be an issue with the focus location being exactly dividable
    // by up to 4?? (maybe even more for higher renderscales)
    // this is somehow related to the rendering scale: if the rendering scale is
    // lower this will only be affected by lower dividable numbers (e.g.
    // renderscale of 6 only has an issue with 1 and 0.5)
    // seems like java cannot place certain images onto their exact pixel
    // location with an AffineTransform...
    final double fraction = this.focus.getY() - Math.floor(this.focus.getY());
    if (MathUtilities.isInt(fraction * 4)) {
      this.focus.setLocation(this.focus.getX(), this.focus.getY() + 0.01);
    }

    final FocusChangedEvent event = new FocusChangedEvent(this, this.focus);
    for (FocusChangedListener listener : this.focusChangedListeners) {
      listener.focusChanged(event);
    }
}
```
At the line "    this.focus = this.clampToMap(focus);", at the occurrence of: "focus" should be replaced with `Nullability.castToNonnull(focus)`
see the example below, for expression `foo.getBar()`, to wrap it with `Nullability.castToNonnull(foo.getBar())`.

```java
public t(){
    String l = foo.getBar();
}
```

will be:
```java
public t(){
    String l = Nullability.castToNonnull(foo.getBar());
}
```

### Instructions:

Do not import any additional classes.

Do not add Java comments.

Only modify relevant lines as required.

Return only the modified method wrapped in the XML format shown below.

Place the Java code inside the <code> tag using a CDATA block with ```java formatting.

Just give me the fixed code snippet in XML format in <response> tag like the example below. I will apply the fix to my codebase. Do not import any additional libraries or classes or add java comments. If you can provide the fixed code snippet, please provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

12:04:16.735 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Retrieving response from cache
12:04:16.735 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.tryCreate
Trying to create Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
@Override
  public void setFocus( final Point2D focus) {
    this.focus = this.clampToMap(Nullability.castToNonnull(focus));

    final double fraction = this.focus.getY() - Math.floor(this.focus.getY());
    if (MathUtilities.isInt(fraction * 4)) {
      this.focus.setLocation(this.focus.getX(), this.focus.getY() + 0.01);
    }

    final FocusChangedEvent event = new FocusChangedEvent(this, this.focus);
    for (FocusChangedListener listener : this.focusChangedListeners) {
      listener.focusChanged(event);
    }
}
  ```
    ]]>
  </code>
</response>
```
12:04:16.735 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
@Override
  public void setFocus( final Point2D focus) {
    this.focus = this.clampToMap(Nullability.castToNonnull(focus));

    final double fraction = this.focus.getY() - Math.floor(this.focus.getY());
    if (MathUtilities.isInt(fraction * 4)) {
      this.focus.setLocation(this.focus.getX(), this.focus.getY() + 0.01);
    }

    final FocusChangedEvent event = new FocusChangedEvent(this, this.focus);
    for (FocusChangedListener listener : this.focusChangedListeners) {
      listener.focusChanged(event);
    }
}
  ```
    ]]>
  </code>
</response>
```
12:04:16.736 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Response created:
@Override
  public void setFocus( final Point2D focus) {
    this.focus = this.clampToMap(Nullability.castToNonnull(focus));

    final double fraction = this.focus.getY() - Math.floor(this.focus.getY());
    if (MathUtilities.isInt(fraction * 4)) {
      this.focus.setLocation(this.focus.getX(), this.focus.getY() + 0.01);
    }

    final FocusChangedEvent event = new FocusChangedEvent(this, this.focus);
    for (FocusChangedListener listener : this.focusChangedListeners) {
      listener.focusChanged(event);
    }
}
12:04:16.736 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.fixDereferenceByRemainingCastToNonnull
Fixing the error by adding castToNonnull
