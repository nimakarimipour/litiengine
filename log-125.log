====================
Type='DEREFERENCE_NULLABLE', message='dereferenced expression this.drawingSpace is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/gui/MouseDrawComponent.java:55
    Graphics2D g = (Graphics2D) this.drawingSpace.getGraphics();
Log:
---NullAway.lambda$resolveRemainingErrors$17---
==============================
---NullAway.lambda$resolveRemainingErrors$17---
TOP LEVEL CALL TO FIX ERROR: Type='DEREFERENCE_NULLABLE', message='dereferenced expression this.drawingSpace is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/gui/MouseDrawComponent.java:55
    Graphics2D g = (Graphics2D) this.drawingSpace.getGraphics();
---ChatGPT.ask---
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "DEREFERENCE_NULLABLE" and the full error message is: "dereferenced expression this.drawingSpace is @Nullable".
The line with the error is: "    Graphics2D g = (Graphics2D) this.drawingSpace.getGraphics();".

The error is within "the method: mouseDragged(java.awt.event.MouseEvent)" and the code surrounding the error is:
```java
  }

  public void setBrushSize(double newSize) {
    this.brushSize = newSize;
  }

  public Color getDrawingColor() {
    return this.drawingColor;
  }

  public void setDrawingColor(Color color) {
    this.drawingColor = color;
  }

  @Override
  public void mouseDragged(MouseEvent e) {
    super.mouseDragged(e);

    double brushX = e.getX();
    double brushY = e.getY();
    Graphics2D g = (Graphics2D) this.drawingSpace.getGraphics();
    int brushXInt = (int) (brushX - this.getX() - this.brushSize * 1 / 2);
    int brushYInt = (int) (brushY - this.getY() - this.brushSize * 1 / 2);
    int brushSizeInt = (int) (this.brushSize);
    g.setColor(this.getDrawingColor());
    if (SwingUtilities.isLeftMouseButton(e)) {
      g.setComposite(AlphaComposite.SrcOver);
      g.fillRect(brushXInt, brushYInt, brushSizeInt, brushSizeInt);
    } else if (SwingUtilities.isRightMouseButton(e)) {
      g.setComposite(AlphaComposite.Clear);
      g.fillRect(
          brushXInt - brushSizeInt / 2,
          brushYInt - brushSizeInt / 2,
          brushSizeInt * 2,
          brushSizeInt * 2);
    }
  }

  public void clearDrawingSpace() {
    Graphics2D g = (Graphics2D) this.drawingSpace.getGraphics();
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "mouseDragged(java.awt.event.MouseEvent)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

---ChatGPT.sendRequestToOpenAI---
Sending request to OpenAI...
---ChatGPT.sendRequestToOpenAI---
Response received from OpenAI.
---Response.<init>---
Creating Response:
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  @Override
  public void mouseDragged(MouseEvent e) {
    super.mouseDragged(e);

    if (this.drawingSpace != null) {
      double brushX = e.getX();
      double brushY = e.getY();
      Graphics2D g = (Graphics2D) this.drawingSpace.getGraphics();
      int brushXInt = (int) (brushX - this.getX() - this.brushSize * 1 / 2);
      int brushYInt = (int) (brushY - this.getY() - this.brushSize * 1 / 2);
      int brushSizeInt = (int) (this.brushSize);
      g.setColor(this.getDrawingColor());
      if (SwingUtilities.isLeftMouseButton(e)) {
        g.setComposite(AlphaComposite.SrcOver);
        g.fillRect(brushXInt, brushYInt, brushSizeInt, brushSizeInt);
      } else if (SwingUtilities.isRightMouseButton(e)) {
        g.setComposite(AlphaComposite.Clear);
        g.fillRect(
            brushXInt - brushSizeInt / 2,
            brushYInt - brushSizeInt / 2,
            brushSizeInt * 2,
            brushSizeInt * 2);
      }
    }
  }
  ```
    ]]>
  </code>
</response>
---Response.<init>---
Response created:
@Override
  public void mouseDragged(MouseEvent e) {
    super.mouseDragged(e);

    if (this.drawingSpace != null) {
      double brushX = e.getX();
      double brushY = e.getY();
      Graphics2D g = (Graphics2D) this.drawingSpace.getGraphics();
      int brushXInt = (int) (brushX - this.getX() - this.brushSize * 1 / 2);
      int brushYInt = (int) (brushY - this.getY() - this.brushSize * 1 / 2);
      int brushSizeInt = (int) (this.brushSize);
      g.setColor(this.getDrawingColor());
      if (SwingUtilities.isLeftMouseButton(e)) {
        g.setComposite(AlphaComposite.SrcOver);
        g.fillRect(brushXInt, brushYInt, brushSizeInt, brushSizeInt);
      } else if (SwingUtilities.isRightMouseButton(e)) {
        g.setComposite(AlphaComposite.Clear);
        g.fillRect(
            brushXInt - brushSizeInt / 2,
            brushYInt - brushSizeInt / 2,
            brushSizeInt * 2,
            brushSizeInt * 2);
      }
    }
  }
