====================
Type='WRONG_OVERRIDE_RETURN', message='method returns @Nullable, but superclass method de.gurkenlabs.litiengine.entities.Entity.getLocation() returns @NonNull'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/graphics/emitters/EntityEmitter.java:69
  @Nullable
Log:
---NullAway.lambda$resolveRemainingErrors$17---
==============================
---NullAway.lambda$resolveRemainingErrors$17---
TOP LEVEL CALL TO FIX ERROR: Type='WRONG_OVERRIDE_RETURN', message='method returns @Nullable, but superclass method de.gurkenlabs.litiengine.entities.Entity.getLocation() returns @NonNull'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/graphics/emitters/EntityEmitter.java:69
  @Nullable
---ChatGPT.ask---
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "WRONG_OVERRIDE_RETURN" and the full error message is: "method returns @Nullable, but superclass method de.gurkenlabs.litiengine.entities.Entity.getLocation() returns @NonNull".
The line with the error is: "  @Nullable".

The error is within "the method: getLocation()" and the code surrounding the error is:
```java
package de.gurkenlabs.litiengine.graphics.emitters;

import de.gurkenlabs.litiengine.entities.IEntity;
import de.gurkenlabs.litiengine.graphics.emitters.xml.EmitterData;
import java.awt.geom.Point2D;
import javax.annotation.Nullable;

/**
 * A standard implementation for emitters that are bound to {@code IEntity.getLocation()}.
 *
 * @see IEntity#getLocation()
 */
public class EntityEmitter extends Emitter {

  private final IEntity entity;
  private boolean dynamicLocation;

  public EntityEmitter(
      final IEntity entity, final String emitterXml, final boolean dynamicLocation) {
    this(entity, dynamicLocation);
    setEmitterData(emitterXml);
  }

  public EntityEmitter(final IEntity entity, final String emitterXml) {
    this(entity, emitterXml, false);
  }

  public EntityEmitter(
      final IEntity entity, final EmitterData emitterData, final boolean dynamicLocation) {
    this(entity, dynamicLocation);
    setEmitterData(emitterData);
  }

  public EntityEmitter(final IEntity entity, final EmitterData emitterData) {
    this(entity, emitterData, false);
  }

  /**
   * Instantiates a new entity emitter.
   *
   * @param entity the entity
   */
  public EntityEmitter(final IEntity entity) {
    this(entity, false);
  }

  /**
   * Instantiates a new entity emitter.
   *
   * @param entity the entity
   * @param dynamicLocation if true, move the Emitter along with its Entity once it moves. If false,
   *     always keep the original Location of the Emitter
   */
  public EntityEmitter(final IEntity entity, boolean dynamicLocation) {
    super(entity.getX(), entity.getY());
    this.entity = entity;
    this.setSize(this.getEntity().getWidth(), this.getEntity().getHeight());
    this.dynamicLocation = dynamicLocation;
  }

  public IEntity getEntity() {
    return this.entity;
  }

  public boolean hasDynamicLocation() {
    return this.dynamicLocation;
  }

  @Nullable
  @Override
  public Point2D getLocation() {
    if (this.getEntity() == null) {
      return null;
    }
    return this.hasDynamicLocation() ? this.getEntity().getLocation() : super.getLocation();
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "getLocation()") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

---ChatGPT.sendRequestToOpenAI---
Sending request to OpenAI...
---ChatGPT.sendRequestToOpenAI---
Response received from OpenAI.
---Response.<init>---
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  @Override
  public Point2D getLocation() {
    return this.hasDynamicLocation() ? this.getEntity().getLocation() : super.getLocation();
  ```
    ]]>
  </code>
</response>
```
---Response.<init>---
Response created:
@Override
  public Point2D getLocation() {
    return this.hasDynamicLocation() ? this.getEntity().getLocation() : super.getLocation();
