====================
Type='DEREFERENCE_NULLABLE', message='dereferenced expression emitterData is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/graphics/emitters/xml/EmitterLoader.java:51
    if (loadedEmitters.containsKey(emitterData.getName())) {
Log:
---NullAway.lambda$resolveRemainingErrors$17---
==============================
---NullAway.lambda$resolveRemainingErrors$17---
TOP LEVEL CALL TO FIX ERROR: Type='DEREFERENCE_NULLABLE', message='dereferenced expression emitterData is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/graphics/emitters/xml/EmitterLoader.java:51
    if (loadedEmitters.containsKey(emitterData.getName())) {
---ChatGPT.ask---
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "DEREFERENCE_NULLABLE" and the full error message is: "dereferenced expression emitterData is @Nullable".
The line with the error is: "    if (loadedEmitters.containsKey(emitterData.getName())) {".

The error is within "the method: load(de.gurkenlabs.litiengine.graphics.emitters.xml.EmitterData)" and the code surrounding the error is:
```java
package de.gurkenlabs.litiengine.graphics.emitters.xml;

import de.gurkenlabs.litiengine.resources.Resources;
import de.gurkenlabs.litiengine.util.io.XmlUtilities;
import java.net.URL;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.Nullable;
import javax.xml.bind.JAXBException;

public class EmitterLoader {
  private static final Map<String, EmitterData> loadedEmitters;
  private static final Logger log = Logger.getLogger(EmitterLoader.class.getName());

  private EmitterLoader() {}

  static {
    loadedEmitters = new ConcurrentHashMap<>();
  }

  @Nullable
  public static EmitterData load(String emitterXml) {
    if (loadedEmitters.containsKey(emitterXml)) {
      return loadedEmitters.get(emitterXml);
    }

    return load(Resources.getLocation(emitterXml));
  }

  @Nullable
  public static EmitterData load(@Nullable URL emitterXml) {
    final String name = emitterXml.getFile();
    if (loadedEmitters.containsKey(name)) {
      return loadedEmitters.get(name);
    }

    EmitterData loaded;
    try {
      loaded = XmlUtilities.read(EmitterData.class, emitterXml);
    } catch (JAXBException e) {
      log.log(Level.SEVERE, String.format("Failed to load emitter data for %s", emitterXml), e);
      return null;
    }

    return load(loaded);
  }

  public static EmitterData load(@Nullable EmitterData emitterData) {
    if (loadedEmitters.containsKey(emitterData.getName())) {
      return loadedEmitters.get(emitterData.getName());
    }

    loadedEmitters.put(emitterData.getName(), emitterData);
    return emitterData;
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "load(de.gurkenlabs.litiengine.graphics.emitters.xml.EmitterData)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

---ChatGPT.sendRequestToOpenAI---
Sending request to OpenAI...
---ChatGPT.sendRequestToOpenAI---
Response received from OpenAI.
---Response.<init>---
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public static EmitterData load(EmitterData emitterData) {
    if (emitterData == null) {
      return null;
    }

    if (loadedEmitters.containsKey(emitterData.getName())) {
      return loadedEmitters.get(emitterData.getName());
    }

    loadedEmitters.put(emitterData.getName(), emitterData);
    return emitterData;
  }
  ```
  ]]>
  </code>
</response>
```
---Response.<init>---
Response created:
public static EmitterData load(EmitterData emitterData) {
    if (emitterData == null) {
      return null;
    }

    if (loadedEmitters.containsKey(emitterData.getName())) {
      return loadedEmitters.get(emitterData.getName());
    }

    loadedEmitters.put(emitterData.getName(), emitterData);
    return emitterData;
  }
