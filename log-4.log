====================
Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/input/Input.java:51
    return gamePadManager;
Log:
11:38:01.302 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
==============================
11:38:01.303 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.COUNT = 1
11:38:01.303 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.PROMPTS SIZE = 1
11:38:01.303 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
Both set to 0 and cleared 0
11:38:01.303 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
4 : TOP LEVEL CALL TO FIX ERROR: Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/input/Input.java:51
    return gamePadManager;
11:38:02.888 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "RETURN_NULLABLE" and the full error message is: "returning @Nullable expression from method with @NonNull return type".
The line with the error is: "    return gamePadManager;".

The error is within "the method: gamepads()" and the code surrounding the error is:
```java
   * Gets the manager for all gamepad input devices.
   *
   * <p>The manager provides easy access to the default controller as well as access by gamepad
   * index for mulitplayer games. Gamepads don't need to be added explicitly, the manager supports
   * hot-plugging at runtime and will auto-detect any added/removed gamepads.
   *
   * <p><b>This returns null if {@code Game.config().input().isGamepadSupport()} is set to
   * false.</b>
   *
   * @return The gamepad manager.
   * @see GamepadManager#current()
   * @see GamepadManager#get(int)
   */
  public static GamepadManager gamepads() {
    if (!Game.config().input().isGamepadSupport()) {
      log.log(
          Level.SEVERE,
          "Cannot access gamepads because gamepad support is disabled in the configuration.");
    }

    return gamePadManager;
  }

  /**
   * Gets the keyboard input device.
   *
   * @return The keyboard input device.
   */
  public static IKeyboard keyboard() {
    return keyboard;
  }

  /**
   * Gets the mouse input device.
   *
   * @return The mouse input device.
   */
  public static IMouse mouse() {
    return mouse;
  }
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "gamepads()") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

11:38:02.888 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Retrieving response from cache
11:38:02.888 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.tryCreate
Trying to create Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public static GamepadManager gamepads() {
    if (!Game.config().input().isGamepadSupport()) {
      log.log(
          Level.SEVERE,
          "Cannot access gamepads because gamepad support is disabled in the configuration.");
      throw new IllegalStateException("Gamepad support is disabled.");
    }

    return gamePadManager;
  }
  ```
    ]]>
  </code>
</response>
```
11:38:02.889 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public static GamepadManager gamepads() {
    if (!Game.config().input().isGamepadSupport()) {
      log.log(
          Level.SEVERE,
          "Cannot access gamepads because gamepad support is disabled in the configuration.");
      throw new IllegalStateException("Gamepad support is disabled.");
    }

    return gamePadManager;
  }
  ```
    ]]>
  </code>
</response>
```
11:38:02.891 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Response created:
public static GamepadManager gamepads() {
    if (!Game.config().input().isGamepadSupport()) {
      log.log(
          Level.SEVERE,
          "Cannot access gamepads because gamepad support is disabled in the configuration.");
      throw new IllegalStateException("Gamepad support is disabled.");
    }

    return gamePadManager;
  }
