====================
Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/environment/EntitySpawner.java:105
    return this.spawnpoints;
Log:
---NullAway.lambda$resolveRemainingErrors$17---
==============================
---NullAway.lambda$resolveRemainingErrors$17---
TOP LEVEL CALL TO FIX ERROR: Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/environment/EntitySpawner.java:105
    return this.spawnpoints;
---ChatGPT.ask---
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "RETURN_NULLABLE" and the full error message is: "returning @Nullable expression from method with @NonNull return type".
The line with the error is: "    return this.spawnpoints;".

The error is within "the method: getSpawnPoints()" and the code surrounding the error is:
```java
package de.gurkenlabs.litiengine.environment;

import de.gurkenlabs.litiengine.Game;
import de.gurkenlabs.litiengine.entities.IEntity;
import de.gurkenlabs.litiengine.entities.Spawnpoint;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.function.Function;
import javax.annotation.Nullable;

/**
 * TODO: Implement spawn event/listener TODO: Implement additional constructors to enhance the API
 */
public abstract class EntitySpawner<T extends IEntity> implements IEntitySpawner<T> {
  private int amount;
  private int interval;
  private long lastSpawnWave;
  private int spawnDelay;
  private SpawnMode spawnMode;
  @Nullable private List<Spawnpoint> spawnpoints;
  @Nullable private Function<IEntitySpawner<T>, List<Spawnpoint>> customSpawnpoints;

  public EntitySpawner(final int interval, final int amount) {
    this.spawnDelay = 1000;
    this.interval = interval;
    this.amount = amount;
    this.spawnMode = SpawnMode.CUSTOMSPAWNPOINTS;
  }

  public EntitySpawner(final List<Spawnpoint> spawnpoints, final int interval, final int amount) {
    this(spawnpoints, interval, amount, SpawnMode.ALLSPAWNPOINTS);
  }

  public EntitySpawner(final List<Spawnpoint> spawnpoints, final int amount, SpawnMode spawnMode) {
    this.spawnDelay = 1000;
    this.amount = amount;
    this.spawnpoints = spawnpoints;
    this.spawnMode = spawnMode;
  }

  /**
   * Initializes a new instance of the {@code EntitySpawner} class.
   *
   * @param spawnpoints The spawnpoints from which this instance will choose from when spawning
   *     entities.
   * @param interval The interval in which entities will be spawned.
   * @param amount The amount of entities to spawn on every spawn event.
   * @param spawnMode the spawning behaviour
   */
  public EntitySpawner(
      final List<Spawnpoint> spawnpoints,
      final int interval,
      final int amount,
      SpawnMode spawnMode) {
    this.interval = interval;
    this.spawnDelay = 1000;
    this.amount = amount;
    this.spawnpoints = spawnpoints;
    this.spawnMode = spawnMode;
  }

  public EntitySpawner(
      final int amount, Function<IEntitySpawner<T>, List<Spawnpoint>> spawnpointCallback) {
    Objects.nonNull(spawnpointCallback);

    this.amount = amount;
    this.customSpawnpoints = spawnpointCallback;
    this.spawnMode = SpawnMode.CUSTOMSPAWNPOINTS;
  }

  public EntitySpawner(
      final int interval,
      final int amount,
      Function<IEntitySpawner<T>, List<Spawnpoint>> spawnpointCallback) {
    this(new ArrayList<Spawnpoint>(), interval, amount);
    Objects.nonNull(spawnpointCallback);

    this.customSpawnpoints = spawnpointCallback;
    this.spawnMode = SpawnMode.CUSTOMSPAWNPOINTS;
  }

  @Override
  public int getSpawnAmount() {
    return this.amount;
  }

  @Override
  public int getSpawnInterval() {
    return this.interval;
  }

  @Override
  public int getSpawnDelay() {
    return this.spawnDelay;
  }

  @Override
  public SpawnMode getSpawnMode() {
    return this.spawnMode;
  }

  @Override
  public List<Spawnpoint> getSpawnPoints() {
    return this.spawnpoints;
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "getSpawnPoints()") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

---ChatGPT.sendRequestToOpenAI---
Sending request to OpenAI...
---ChatGPT.sendRequestToOpenAI---
Response received from OpenAI.
---Response.<init>---
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  @Override
  public List<Spawnpoint> getSpawnPoints() {
    return this.spawnpoints != null ? this.spawnpoints : new ArrayList<>();
  }
  ```
    ]]>
  </code>
</response>
```
---Response.<init>---
Response created:
@Override
  public List<Spawnpoint> getSpawnPoints() {
    return this.spawnpoints != null ? this.spawnpoints : new ArrayList<>();
  }
