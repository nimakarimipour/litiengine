====================
Type='DEREFERENCE_NULLABLE', message='dereferenced expression emitterXml is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/graphics/emitters/xml/EmitterLoader.java:34
    final String name = emitterXml.getFile();
Log:
11:42:19.211 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
==============================
11:42:19.211 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.COUNT = 1
11:42:19.211 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.PROMPTS SIZE = 1
11:42:19.211 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
Both set to 0 and cleared 0
11:42:19.211 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
58 : TOP LEVEL CALL TO FIX ERROR: Type='DEREFERENCE_NULLABLE', message='dereferenced expression emitterXml is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/graphics/emitters/xml/EmitterLoader.java:34
    final String name = emitterXml.getFile();
11:42:20.772 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "DEREFERENCE_NULLABLE" and the full error message is: "dereferenced expression emitterXml is @Nullable".
The line with the error is: "    final String name = emitterXml.getFile();".

The error is within "the method: load(java.net.URL)" and the code surrounding the error is:
```java
  private static final Map<String, EmitterData> loadedEmitters;
  private static final Logger log = Logger.getLogger(EmitterLoader.class.getName());

  private EmitterLoader() {}

  static {
    loadedEmitters = new ConcurrentHashMap<>();
  }

  @Nullable
  public static EmitterData load(String emitterXml) {
    if (loadedEmitters.containsKey(emitterXml)) {
      return loadedEmitters.get(emitterXml);
    }

    return load(Resources.getLocation(emitterXml));
  }

  @Nullable
  public static EmitterData load(@Nullable URL emitterXml) {
    final String name = emitterXml.getFile();
    if (loadedEmitters.containsKey(name)) {
      return loadedEmitters.get(name);
    }

    EmitterData loaded;
    try {
      loaded = XmlUtilities.read(EmitterData.class, emitterXml);
    } catch (JAXBException e) {
      log.log(Level.SEVERE, String.format("Failed to load emitter data for %s", emitterXml), e);
      return null;
    }

    return load(loaded);
  }

  public static EmitterData load(@Nullable EmitterData emitterData) {
    if (loadedEmitters.containsKey(emitterData.getName())) {
      return loadedEmitters.get(emitterData.getName());
    }
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "load(java.net.URL)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

11:42:20.772 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Retrieving response from cache
11:42:20.772 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.tryCreate
Trying to create Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public static EmitterData load(URL emitterXml) {
    if (emitterXml == null) {
      log.log(Level.SEVERE, "The URL provided for emitterXml is null.");
      return null;
    }
    
    final String name = emitterXml.getFile();
    if (loadedEmitters.containsKey(name)) {
      return loadedEmitters.get(name);
    }

    EmitterData loaded;
    try {
      loaded = XmlUtilities.read(EmitterData.class, emitterXml);
    } catch (JAXBException e) {
      log.log(Level.SEVERE, String.format("Failed to load emitter data for %s", emitterXml), e);
      return null;
    }

    return load(loaded);
  }
  ```
    ]]>
  </code>
</response>
```
11:42:20.773 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public static EmitterData load(URL emitterXml) {
    if (emitterXml == null) {
      log.log(Level.SEVERE, "The URL provided for emitterXml is null.");
      return null;
    }
    
    final String name = emitterXml.getFile();
    if (loadedEmitters.containsKey(name)) {
      return loadedEmitters.get(name);
    }

    EmitterData loaded;
    try {
      loaded = XmlUtilities.read(EmitterData.class, emitterXml);
    } catch (JAXBException e) {
      log.log(Level.SEVERE, String.format("Failed to load emitter data for %s", emitterXml), e);
      return null;
    }

    return load(loaded);
  }
  ```
    ]]>
  </code>
</response>
```
11:42:20.774 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Response created:
public static EmitterData load(URL emitterXml) {
    if (emitterXml == null) {
      log.log(Level.SEVERE, "The URL provided for emitterXml is null.");
      return null;
    }
    
    final String name = emitterXml.getFile();
    if (loadedEmitters.containsKey(name)) {
      return loadedEmitters.get(name);
    }

    EmitterData loaded;
    try {
      loaded = XmlUtilities.read(EmitterData.class, emitterXml);
    } catch (JAXBException e) {
      log.log(Level.SEVERE, String.format("Failed to load emitter data for %s", emitterXml), e);
      return null;
    }

    return load(loaded);
  }
