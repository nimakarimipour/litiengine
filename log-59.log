====================
Type='DEREFERENCE_NULLABLE', message='dereferenced expression path is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/util/io/FileUtilities.java:111
    return getFileName(path.getPath());
Log:
11:42:24.128 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
==============================
11:42:24.128 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.COUNT = 1
11:42:24.128 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.PROMPTS SIZE = 1
11:42:24.128 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
Both set to 0 and cleared 0
11:42:24.128 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
59 : TOP LEVEL CALL TO FIX ERROR: Type='DEREFERENCE_NULLABLE', message='dereferenced expression path is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/util/io/FileUtilities.java:111
    return getFileName(path.getPath());
11:42:25.700 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "DEREFERENCE_NULLABLE" and the full error message is: "dereferenced expression path is @Nullable".
The line with the error is: "    return getFileName(path.getPath());".

The error is within "the method: getFileName(java.net.URL)" and the code surrounding the error is:
```java
    return fileNames;
  }

  public static String getExtension(final File file) {
    return getExtension(file.getAbsolutePath());
  }

  public static String getExtension(@Nullable final String path) {
    final String fileName = getFileName(path, true);
    if (!fileName.contains(".")) {
      return "";
    }
    try {
      return fileName.substring(fileName.lastIndexOf('.') + 1);
    } catch (final Exception e) {
      return "";
    }
  }

  public static String getFileName(@Nullable URL path) {
    return getFileName(path.getPath());
  }

  public static String getFileName(@Nullable final String path) {
    return getFileName(path, false);
  }

  public static String getFileName(@Nullable final String path, boolean extension) {
    if (path == null
        || path.isEmpty()
        || path.endsWith(FILE_SEPARATOR_WIN)
        || path.endsWith(FILE_SEPARATOR)) {
      return "";
    }

    String name = path;

    if (!extension) {
      final int pos = name.lastIndexOf('.');
      if (pos > 0) {
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "getFileName(java.net.URL)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

11:42:25.700 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Retrieving response from cache
11:42:25.700 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.tryCreate
Trying to create Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public static String getFileName(URL path) {
    if (path == null) {
      return "";
    }
    return getFileName(path.getPath());
  }
  ```
    ]]>
  </code>
</response>
```
11:42:25.701 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public static String getFileName(URL path) {
    if (path == null) {
      return "";
    }
    return getFileName(path.getPath());
  }
  ```
    ]]>
  </code>
</response>
```
11:42:25.702 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Response created:
public static String getFileName(URL path) {
    if (path == null) {
      return "";
    }
    return getFileName(path.getPath());
  }
