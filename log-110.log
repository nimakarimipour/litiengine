====================
Type='DEREFERENCE_NULLABLE', message='dereferenced expression mapObject.getType() is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/environment/MapObjectLoader.java:101
    if (!mapObject.getType().equalsIgnoreCase(this.getMapObjectType())) {
Log:
11:46:21.949 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
==============================
11:46:21.949 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.COUNT = 1
11:46:21.949 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.PROMPTS SIZE = 1
11:46:21.949 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
Both set to 0 and cleared 0
11:46:21.949 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
110 : TOP LEVEL CALL TO FIX ERROR: Type='DEREFERENCE_NULLABLE', message='dereferenced expression mapObject.getType() is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/environment/MapObjectLoader.java:101
    if (!mapObject.getType().equalsIgnoreCase(this.getMapObjectType())) {
11:46:23.499 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "DEREFERENCE_NULLABLE" and the full error message is: "dereferenced expression mapObject.getType() is @Nullable".
The line with the error is: "    if (!mapObject.getType().equalsIgnoreCase(this.getMapObjectType())) {".

The error is within "the method: isMatchingType(de.gurkenlabs.litiengine.environment.tilemap.IMapObject)" and the code surrounding the error is:
```java

    loadCustomMapObjectProperties(entity, mapObject);

    mapObject
        .getProperties()
        .forEach(
            (name, property) -> {
              if (MapObjectProperty.isCustom(name)) {
                entity.getProperties().setValue(name, property);
              }
            });
  }

  public void afterLoad(Collection<IEntity> entities, IMapObject mapObject) {
    for (IEntity entity : entities) {
      callAfterTmxUnmarshal(entity, mapObject);
    }
  }

  protected boolean isMatchingType(IMapObject mapObject) {
    if (!mapObject.getType().equalsIgnoreCase(this.getMapObjectType())) {
      log.log(
          Level.SEVERE,
          "Cannot load a mapobject of the type [{0}] with a loader of type [{1}].",
          new Object[] {mapObject.getType(), this.getClass()});
      return false;
    }

    return true;
  }

  private static void loadCustomMapObjectProperties(IEntity entity, IMapObject mapObject) {
    for (final Field field :
        ReflectionUtilities.getAllFields(new ArrayList<Field>(), entity.getClass())) {
      TmxProperty property = field.getAnnotation(TmxProperty.class);

      if (property == null) {
        continue;
      }

```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "isMatchingType(de.gurkenlabs.litiengine.environment.tilemap.IMapObject)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

11:46:23.499 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Retrieving response from cache
11:46:23.499 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.tryCreate
Trying to create Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  protected boolean isMatchingType(IMapObject mapObject) {
    String mapObjectType = mapObject.getType();
    if (mapObjectType == null || !mapObjectType.equalsIgnoreCase(this.getMapObjectType())) {
      log.log(
          Level.SEVERE,
          "Cannot load a mapobject of the type [{0}] with a loader of type [{1}].",
          new Object[] {mapObjectType, this.getClass()});
      return false;
    }

    return true;
  }
  ```
    ]]>
  </code>
</response>
```
11:46:23.500 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  protected boolean isMatchingType(IMapObject mapObject) {
    String mapObjectType = mapObject.getType();
    if (mapObjectType == null || !mapObjectType.equalsIgnoreCase(this.getMapObjectType())) {
      log.log(
          Level.SEVERE,
          "Cannot load a mapobject of the type [{0}] with a loader of type [{1}].",
          new Object[] {mapObjectType, this.getClass()});
      return false;
    }

    return true;
  }
  ```
    ]]>
  </code>
</response>
```
11:46:23.500 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Response created:
protected boolean isMatchingType(IMapObject mapObject) {
    String mapObjectType = mapObject.getType();
    if (mapObjectType == null || !mapObjectType.equalsIgnoreCase(this.getMapObjectType())) {
      log.log(
          Level.SEVERE,
          "Cannot load a mapobject of the type [{0}] with a loader of type [{1}].",
          new Object[] {mapObjectType, this.getClass()});
      return false;
    }

    return true;
  }
