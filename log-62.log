====================
Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/gui/TextFieldComponent.java:68
    return this.fullText;
Log:
---NullAway.lambda$resolveRemainingErrors$17---
==============================
---NullAway.lambda$resolveRemainingErrors$17---
TOP LEVEL CALL TO FIX ERROR: Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/gui/TextFieldComponent.java:68
    return this.fullText;
---ChatGPT.ask---
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "RETURN_NULLABLE" and the full error message is: "returning @Nullable expression from method with @NonNull return type".
The line with the error is: "    return this.fullText;".

The error is within "the method: getText()" and the code surrounding the error is:
```java
package de.gurkenlabs.litiengine.gui;

import de.gurkenlabs.litiengine.Align;
import de.gurkenlabs.litiengine.Game;
import de.gurkenlabs.litiengine.input.Input;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.geom.Rectangle2D;
import java.util.List;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.function.Consumer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.annotation.Nullable;

public class TextFieldComponent extends ImageComponent {
  public static final String DOUBLE_FORMAT = "[-+]?[0-9]*\\.?[0-9]*([eE][-+]?[0-9]*)?";
  public static final String INTEGER_FORMAT = "[0-9]{1,10}";
  private static final Logger log = Logger.getLogger(TextFieldComponent.class.getName());
  private final List<Consumer<String>> changeConfirmedConsumers;
  private boolean cursorVisible;
  private final int flickerDelay;
  @Nullable private String format;

  @Nullable private String fullText;
  private long lastToggled;
  private int maxLength = 0;

  public TextFieldComponent(
      final double x, final double y, final double width, final double height, final String text) {
    super(x, y, width, height, text);
    this.changeConfirmedConsumers = new CopyOnWriteArrayList<>();
    this.setText(text);
    this.flickerDelay = 100;
    Input.keyboard().onKeyTyped(this::handleTypedKey);
    this.onClicked(
        e -> {
          if (!this.isSelected()) {
            this.toggleSelection();
          }
        });

    Input.mouse()
        .onClicked(
            e -> {
              if (!this.getBoundingBox().contains(Input.mouse().getLocation())) {
                this.setSelected(false);
              }
            });

    this.setTextAlign(Align.LEFT);
  }

  @Nullable
  public String getFormat() {
    return this.format;
  }

  public int getMaxLength() {
    return this.maxLength;
  }

  @Override
  public String getText() {
    return this.fullText;
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "getText()") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

---ChatGPT.sendRequestToOpenAI---
Sending request to OpenAI...
---ChatGPT.sendRequestToOpenAI---
Response received from OpenAI.
---Response.<init>---
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  @Override
  public String getText() {
    return this.fullText != null ? this.fullText : "";
  }
  ```
  ]]>
  </code>
</response>
```
---Response.<init>---
Response created:
@Override
  public String getText() {
    return this.fullText != null ? this.fullText : "";
  }
