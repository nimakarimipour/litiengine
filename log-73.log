====================
Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/input/GamepadManager.java:164
      return null;
Log:
11:43:31.312 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
==============================
11:43:31.312 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.COUNT = 1
11:43:31.312 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.PROMPTS SIZE = 1
11:43:31.312 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
Both set to 0 and cleared 0
11:43:31.312 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
73 : TOP LEVEL CALL TO FIX ERROR: Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/input/GamepadManager.java:164
      return null;
11:43:32.800 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "RETURN_NULLABLE" and the full error message is: "returning @Nullable expression from method with @NonNull return type".
The line with the error is: "      return null;".

The error is within "the method: get(int)" and the code surrounding the error is:
```java
   * Gets the first gamepad that is currently available.
   *
   * @return The first available {@link Gamepad} instance
   * @see #get(int)
   * @see #getAll()
   */
  public Gamepad current() {
    return get(0);
  }

  /**
   * Gets the gamepad by the index within the gamepad list.
   *
   * @param index The index of the {@link Gamepad}.
   * @return The {@link Gamepad} with the specified index.
   * @see #getAll()
   * @see #current()
   */
  public Gamepad get(final int index) {
    if (this.gamePads.isEmpty()) {
      return null;
    }

    return this.gamePads.get(index);
  }

  /**
   * Gets the gamepad with the specified id if it is still plugged in. After re-plugging a
   * controller while the game is running, its id might change.
   *
   * @param id The id of the {@link Gamepad}.
   * @return The {@link Gamepad} with the specified index.
   * @see #getAll()
   * @see #current()
   */
  @Nullable
  public Gamepad getById(final int id) {
    for (final Gamepad gamepad : this.gamePads) {
      if (gamepad.getId() == id) {
        return gamepad;
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "get(int)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

11:43:32.800 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Retrieving response from cache
11:43:32.800 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.tryCreate
Trying to create Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public Gamepad get(final int index) {
    if (this.gamePads.isEmpty() || index < 0 || index >= this.gamePads.size()) {
      throw new IllegalArgumentException("Invalid index");
    }

    return this.gamePads.get(index);
  }
  ```
    ]]>
  </code>
</response>
```
11:43:32.801 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public Gamepad get(final int index) {
    if (this.gamePads.isEmpty() || index < 0 || index >= this.gamePads.size()) {
      throw new IllegalArgumentException("Invalid index");
    }

    return this.gamePads.get(index);
  }
  ```
    ]]>
  </code>
</response>
```
11:43:32.802 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Response created:
public Gamepad get(final int index) {
    if (this.gamePads.isEmpty() || index < 0 || index >= this.gamePads.size()) {
      throw new IllegalArgumentException("Invalid index");
    }

    return this.gamePads.get(index);
  }
