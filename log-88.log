====================
Type='DEREFERENCE_NULLABLE', message='dereferenced expression v.properties is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/environment/tilemap/xml/CustomPropertyAdapter.java:117
        new HashMap<>(v.properties.size()); // use hashtable to reject null keys/values
Log:
11:44:39.723 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
==============================
11:44:39.723 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.COUNT = 1
11:44:39.723 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.PROMPTS SIZE = 1
11:44:39.723 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
Both set to 0 and cleared 0
11:44:39.723 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
88 : TOP LEVEL CALL TO FIX ERROR: Type='DEREFERENCE_NULLABLE', message='dereferenced expression v.properties is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/environment/tilemap/xml/CustomPropertyAdapter.java:117
        new HashMap<>(v.properties.size()); // use hashtable to reject null keys/values
11:44:41.242 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "DEREFERENCE_NULLABLE" and the full error message is: "dereferenced expression v.properties is @Nullable".
The line with the error is: "        new HashMap<>(v.properties.size()); // use hashtable to reject null keys/values".

The error is within "the method: unmarshal(de.gurkenlabs.litiengine.environment.tilemap.xml.CustomPropertyAdapter.PropertyList)" and the code surrounding the error is:
```java
      return this.name.compareTo(o.name);
    }
  }

  @XmlAccessorType(XmlAccessType.FIELD)
  static class PropertyList {
    @Nullable
    @XmlElement(name = "property")
    List<Property> properties;

    PropertyList() {}

    PropertyList(List<Property> properties) {
      this.properties = properties;
    }
  }

  @Override
  public Map<String, ICustomProperty> unmarshal(PropertyList v) {
    Map<String, ICustomProperty> map =
        new HashMap<>(v.properties.size()); // use hashtable to reject null keys/values
    for (Property property : v.properties) {
      CustomProperty prop =
          new CustomProperty(
              property.type, property.value != null ? property.value : property.contents);
      if (property.location != null) {
        prop.setValue(property.location);
      }
      map.put(property.name, prop);
    }
    return map;
  }

  @Nullable
  @Override
  public PropertyList marshal(Map<String, ICustomProperty> v) {
    if (v.isEmpty()) {
      return null;
    }
    List<Property> list = new ArrayList<>(v.size());
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "unmarshal(de.gurkenlabs.litiengine.environment.tilemap.xml.CustomPropertyAdapter.PropertyList)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

11:44:41.242 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Retrieving response from cache
11:44:41.242 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.tryCreate
Trying to create Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  @Override
  public Map<String, ICustomProperty> unmarshal(PropertyList v) {
    if (v == null || v.properties == null) {
      return Collections.emptyMap();
    }
    Map<String, ICustomProperty> map =
        new HashMap<>(v.properties.size()); // use hashtable to reject null keys/values
    for (Property property : v.properties) {
      CustomProperty prop =
          new CustomProperty(
              property.type, property.value != null ? property.value : property.contents);
      if (property.location != null) {
        prop.setValue(property.location);
      }
      map.put(property.name, prop);
    }
    return map;
  }
  ```
    ]]>
  </code>
</response>
```
11:44:41.243 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  @Override
  public Map<String, ICustomProperty> unmarshal(PropertyList v) {
    if (v == null || v.properties == null) {
      return Collections.emptyMap();
    }
    Map<String, ICustomProperty> map =
        new HashMap<>(v.properties.size()); // use hashtable to reject null keys/values
    for (Property property : v.properties) {
      CustomProperty prop =
          new CustomProperty(
              property.type, property.value != null ? property.value : property.contents);
      if (property.location != null) {
        prop.setValue(property.location);
      }
      map.put(property.name, prop);
    }
    return map;
  }
  ```
    ]]>
  </code>
</response>
```
11:44:41.244 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Response created:
@Override
  public Map<String, ICustomProperty> unmarshal(PropertyList v) {
    if (v == null || v.properties == null) {
      return Collections.emptyMap();
    }
    Map<String, ICustomProperty> map =
        new HashMap<>(v.properties.size()); // use hashtable to reject null keys/values
    for (Property property : v.properties) {
      CustomProperty prop =
          new CustomProperty(
              property.type, property.value != null ? property.value : property.contents);
      if (property.location != null) {
        prop.setValue(property.location);
      }
      map.put(property.name, prop);
    }
    return map;
  }
