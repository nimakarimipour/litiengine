====================
Type='DEREFERENCE_NULLABLE', message='dereferenced expression this.collisionEntities.get(entity.getCollisionType()) is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/physics/PhysicsEngine.java:79
        this.collisionEntities.get(entity.getCollisionType()).add(entity);
Log:
11:41:53.595 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
==============================
11:41:53.595 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.COUNT = 1
11:41:53.595 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.PROMPTS SIZE = 1
11:41:53.595 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
Both set to 0 and cleared 0
11:41:53.595 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
52 : TOP LEVEL CALL TO FIX ERROR: Type='DEREFERENCE_NULLABLE', message='dereferenced expression this.collisionEntities.get(entity.getCollisionType()) is @Nullable'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/physics/PhysicsEngine.java:79
        this.collisionEntities.get(entity.getCollisionType()).add(entity);
11:41:55.129 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "DEREFERENCE_NULLABLE" and the full error message is: "dereferenced expression this.collisionEntities.get(entity.getCollisionType()) is @Nullable".
The line with the error is: "        this.collisionEntities.get(entity.getCollisionType()).add(entity);".

The error is within "the method: add(de.gurkenlabs.litiengine.entities.ICollisionEntity)" and the code surrounding the error is:
```java

  /**
   * Adds the specified collision aware entity to the physics engine which will make it respect the
   * entity's collision box for upcoming calls.
   *
   * <p><i>If you add a {@code ICollisionEntiy} to your Environment, it will automatically be added
   * to the the PhysicsEngine. There is typically no need to call this explicitly.</i>
   *
   * @param entity The collision entity to be added.
   * @see ICollisionEntity#getCollisionBox()
   * @see PhysicsEngine#remove(ICollisionEntity)
   */
  public void add(final ICollisionEntity entity) {
    if (entity.getCollisionType() == null) {
      return;
    }

    switch (entity.getCollisionType()) {
      case DYNAMIC:
      case STATIC:
        this.collisionEntities.get(entity.getCollisionType()).add(entity);
        break;
      default:
        return;
    }

    this.collisionEntities.get(Collision.ANY).add(entity);
  }

  /**
   * Removes the specified entity from any collision processing. Typically this method is implicitly
   * called when an entity is removed from the current environment.
   *
   * @param entity The entity that is about to be removed.
   */
  public void remove(final ICollisionEntity entity) {
    if (entity.getCollisionType() == null) {
      return;
    }

```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "add(de.gurkenlabs.litiengine.entities.ICollisionEntity)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

11:41:55.129 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Retrieving response from cache
11:41:55.129 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.tryCreate
Trying to create Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public void add(final ICollisionEntity entity) {
    if (entity.getCollisionType() == null) {
      return;
    }

    Collection<ICollisionEntity> entitiesOfType = this.collisionEntities.get(entity.getCollisionType());

    if (entitiesOfType != null) {
      entitiesOfType.add(entity);
    }

    Collection<ICollisionEntity> anyEntities = this.collisionEntities.get(Collision.ANY);

    if (anyEntities != null) {
      anyEntities.add(entity);
    }
  }
  ```
    ]]>
  </code>
</response>
```
11:41:55.130 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public void add(final ICollisionEntity entity) {
    if (entity.getCollisionType() == null) {
      return;
    }

    Collection<ICollisionEntity> entitiesOfType = this.collisionEntities.get(entity.getCollisionType());

    if (entitiesOfType != null) {
      entitiesOfType.add(entity);
    }

    Collection<ICollisionEntity> anyEntities = this.collisionEntities.get(Collision.ANY);

    if (anyEntities != null) {
      anyEntities.add(entity);
    }
  }
  ```
    ]]>
  </code>
</response>
```
11:41:55.130 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Response created:
public void add(final ICollisionEntity entity) {
    if (entity.getCollisionType() == null) {
      return;
    }

    Collection<ICollisionEntity> entitiesOfType = this.collisionEntities.get(entity.getCollisionType());

    if (entitiesOfType != null) {
      entitiesOfType.add(entity);
    }

    Collection<ICollisionEntity> anyEntities = this.collisionEntities.get(Collision.ANY);

    if (anyEntities != null) {
      anyEntities.add(entity);
    }
  }
