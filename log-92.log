====================
Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/graphics/animation/Animation.java:180
    return this.spritesheet;
Log:
---NullAway.lambda$resolveRemainingErrors$17---
==============================
---NullAway.lambda$resolveRemainingErrors$17---
TOP LEVEL CALL TO FIX ERROR: Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/litiengine/src/de/gurkenlabs/litiengine/graphics/animation/Animation.java:180
    return this.spritesheet;
---ChatGPT.ask---
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "RETURN_NULLABLE" and the full error message is: "returning @Nullable expression from method with @NonNull return type".
The line with the error is: "    return this.spritesheet;".

The error is within "the method: getSpritesheet()" and the code surrounding the error is:
```java
   * Gets the name of this animation.
   *
   * @return The name of this animation.
   */
  public String getName() {
    return this.name;
  }

  public Spritesheet getSpritesheet() {
    // in case the previously sprite sheet was unloaded (removed from the loaded sprite sheets),
    // try to find an updated one by the name of the previously used sprite
    if (this.spritesheet != null && !this.spritesheet.isLoaded()) {
      log.log(
          Level.INFO,
          "Reloading spritesheet {0} for animation {1}",
          new Object[] {this.spritesheet.getName(), this.getName()});
      this.spritesheet = Resources.spritesheets().get(this.spritesheet.getName());
      this.initKeyFrames();
    }

    return this.spritesheet;
  }

  /**
   * Gets a value indicating whether this animation intended to loop.
   *
   * @return True if this animation will loop; otherwise false.
   */
  public boolean isLooping() {
    return this.loop;
  }

  /**
   * Gets a value indicating whether this animation is currently paused.
   *
   * @return True if this animation is currently pause; otherwise false.
   */
  public boolean isPaused() {
    return this.paused;
  }
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "getSpritesheet()") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

---ChatGPT.sendRequestToOpenAI---
Sending request to OpenAI...
---ChatGPT.sendRequestToOpenAI---
Response received from OpenAI.
---Response.<init>---
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public Spritesheet getSpritesheet() {
    if (this.spritesheet != null && !this.spritesheet.isLoaded()) {
      log.log(
          Level.INFO,
          "Reloading spritesheet {0} for animation {1}",
          new Object[] {this.spritesheet.getName(), this.getName()});
      this.spritesheet = Resources.spritesheets().get(this.spritesheet.getName());
      this.initKeyFrames();
    }

    if (this.spritesheet == null) {
      throw new IllegalStateException("Spritesheet is null and cannot be returned as non-null.");
    }

    return this.spritesheet;
  }
  ```
    ]]>
  </code>
</response>
```
---Response.<init>---
Response created:
public Spritesheet getSpritesheet() {
    if (this.spritesheet != null && !this.spritesheet.isLoaded()) {
      log.log(
          Level.INFO,
          "Reloading spritesheet {0} for animation {1}",
          new Object[] {this.spritesheet.getName(), this.getName()});
      this.spritesheet = Resources.spritesheets().get(this.spritesheet.getName());
      this.initKeyFrames();
    }

    if (this.spritesheet == null) {
      throw new IllegalStateException("Spritesheet is null and cannot be returned as non-null.");
    }

    return this.spritesheet;
  }
